Chapter 16. “Who Did You Pass On The Road? Nobody”: Lojban And Logic  
---  
Prev: Section 16.10 |  Next: Section 16.12  
---|---  
Table of Contents
Book Info Page
* * *
## 16.11. Using _naku_ outside a prenex
Let us consider the English sentence
**Example 16.79. **
Some children do not go to school.
  

We cannot express this directly with __na__ ; the apparently obvious translation
**Example 16.80. **
su'oda | poi | verba  
---|---|---  
At-least-one-X | which-are | child(ren)  
na | klama | su'ode | poi | ckule  
---|---|---|---|---  
[false] | go-to | at-least-one-Y | which-are | school(s).  
  

when converted to the external negation form produces:
**Example 16.81. **
naku | zo'u | su'oda | poi | verba | cu  
---|---|---|---|---|---  
It-is-false | that | some-which | are | children |   
klama | su'ode | poi | ckule  
---|---|---|---  
go-to | some-which | are | schools.  
All children don't go to some school (not just some children).  
---  
  

Lojban provides a negation form which more closely emulates natural language negation. This involves putting _naku_ before the selbri, instead of a __na__. _naku_ is clearly a contradictory negation, given its parallel with prenex bridi negation. Using _naku_ , Example 16.79 can be expressed as:
**Example 16.82. **
su'oda | poi | verba | naku | klama | su'ode | poi | ckule  
---|---|---|---|---|---|---|---  
Some | which-are | children | don't | go-to | some | which-are | schools.  
Some children don't go to a school.  
---  
  

Although it is not technically a sumti, _naku_ can be used in most of the places where a sumti may appear. We'll see what this means in a moment.
When you use _naku_ within a bridi, you are explicitly creating a negation boundary. As explained in Section 16.9, when a prenex negation boundary expressed by _naku_ moves past a quantifier, the quantifier has to be inverted. The same is true for _naku_ in the bridi proper. We can move _naku_ to any place in the sentence where a sumti can go, inverting any quantifiers that the negation boundary crosses. Thus, the following are equivalent to Example 16.82 (no good English translations exist):
**Example 16.83. **
su'oda | poi | verba | cu | klama | rode | poi | ckule | naku  
---|---|---|---|---|---|---|---|---  
For some children, for every school, they don't go to it.  
---  
  

**Example 16.84. **
su'oda | poi | verba | cu | klama | naku | su'ode | poi | ckule  
---|---|---|---|---|---|---|---|---  
Some children don't go to (some) school(s).  
---  
  

**Example 16.85. **
naku | roda | poi | verba | cu | klama | su'ode | poi | ckule  
---|---|---|---|---|---|---|---|---  
It is false that all children go to some school(s).  
---  
  

In Example 16.83, we moved the negation boundary rightward across the quantifier of __de__ , forcing us to invert it. In Example 16.85 we moved the negation boundary across the quantifier of __da__ , forcing us to invert it instead. Example 16.84 merely switched the selbri and the negation boundary, with no effect on the quantifiers.
The same rules apply if you rearrange the sentence so that the quantifier crosses an otherwise fixed negation. You can't just convert the selbri of Example 16.82 and rearrange the sumti to produce
**Example 16.86. **
su'ode | poi | ckule | ku'o | naku | se | klama | roda | poi | verba  
---|---|---|---|---|---|---|---|---|---  
Some schools aren't gone-to-by every child.  
---  
  

or rather, Example 16.86 means something completely different from Example 16.82. Conversion with __se__ under _naku_ negation is not symmetric; not all sumti are treated identically, and some sumti are not invariant under conversion. Thus, internal negation with _naku_ is considered an advanced technique, used to achieve stylistic compatibility with natural languages.
It isn't always easy to see which quantifiers have to be inverted in a sentence. Example 16.82 is identical in meaning to:
**Example 16.87. **
su'o | verba | naku | klama | su'o | ckule  
---|---|---|---|---|---  
Some | children | don't | go-to | some | school.  
  

but in Example 16.87, the bound variables __da__ and __de__ have been hidden.
It is trivial to export an internal bridi negation expressed with __na__ to the prenex, as we saw in Section 16.9; you just move it to the left end of the prenex. In comparison, it is non-trivial to export a _naku_ to the prenex because of the quantifiers. The rules for exporting _naku_ require that you export all of the quantified variables (implicit or explicit) along with _naku_ , and you must export them from left to right, in the same order that they appear in the sentence. Thus Example 16.82 goes into prenex form as:
**Example 16.88. **
su'oda | poi | verba | ku'o | naku  
---|---|---|---|---  
For-some-X | which | is-a-child, |  | it-is-not-the-case-that  
su'ode | poi | ckule | zo'u | da | klama | de  
---|---|---|---|---|---|---  
there-is-a-Y | which | is-a-school | such-that: | X | goes | to | Y.  
  

We can now move the _naku_ to the left end of the prenex, getting a contradictory negation that can be expressed with __na__ :
**Example 16.89. **
naku | roda | poi | verba  
---|---|---|---  
It-is-not-the-case-that | for-all-X's | which-are | children,  
su'ode | poi | ckule | zo'u | da | klama | de  
---|---|---|---|---|---|---  
there-is-a-Y | which-is | a-school | such-that: | X | goes-to | Y.  
  

from which we can restore the quantified variables to the sentence, giving:
**Example 16.90. **
naku | zo'u | roda | poi | verba | cu | klama | su'ode | poi | ckule  
---|---|---|---|---|---|---|---|---|---  
It is not the case that all children go to some school.  
---  
  

or more briefly
**Example 16.91. **
ro | verba | cu | na | klama | su'o | ckule  
---|---|---|---|---|---|---  
All | children |  | [false] | go-to | some | school(s).  
  

As noted in Section 16.5, a sentence with two different quantified variables, such as Example 16.91, cannot always be converted with __se__ without first exporting the quantified variables. When the variables have been exported, the sentence proper can be converted, but the quantifier order in the prenex must remain unchanged:
**Example 16.92. **
roda | poi | verba | su'ode  
---|---|---|---  
for-all-X's | which-are | children, | there-is-a-Y  
poi | ckule | zo'u | de | na | se | klama | da  
---|---|---|---|---|---|---|---  
which | is-a-school | such-that: | Y |  |  | is-gone-to-by | X.  
  

While you can't freely convert with __se__ when you have two quantified variables in a sentence, you can still freely move sumti to either side of the selbri, as long as the order isn't changed. If you use __na__ negation in such a sentence, nothing special need be done. If you use _naku_ negation, then quantified variables that cross the negation boundary must be inverted.
Clearly, if all of Lojban negation was built on _naku_ negation instead of __na__ negation, logical manipulation in Lojban would be as difficult as in natural languages. In Section 16.12, for example, we'll discuss DeMorgan's Law, which must be used whenever a sumti with a logical connection is moved across a negation boundary.
Since _naku_ has the grammar of a sumti, it can be placed almost anywhere a sumti can go, including __be__ and __bei__ clauses; it isn't clear what these mean, and we recommend avoiding such constructs.
You can put multiple _naku_ compounds in a sentence, each forming a separate negation boundary. Two adjacent _naku_ compounds in a bridi are a double negative and cancel out:
**Example 16.93. **
mi naku naku le zarci cu klama
  

Other expressions using two _naku_ compounds may or may not cancel out. If there is no quantified variable between them, then the _naku_ compounds cancel.
Negation with internal _naku_ is clumsy and non-intuitive for logical manipulations, but then, so are the natural language features it is emulating.
* * *
Chapter 16. “Who Did You Pass On The Road? Nobody”: Lojban And Logic  
---  
Prev: Section 16.10 |  Next: Section 16.12  
---|---  
Table of Contents
Book Info Page
